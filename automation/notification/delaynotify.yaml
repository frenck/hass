- alias: ATL Ground Delay
  trigger:
    platform: state
    entity_id: sensor.atl_ground_delay
    to: 'True'
  action:
    service: script.delay_notify
    data:
      airport: 'ATL'
      type: 'GDP'
- alias: ATL Ground Stop
  trigger:
    platform: state
    entity_id: sensor.atl_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.atl_end_time', 'None') }}"
  action:
    service: script.delay_notify
    data_template:
      airport: 'ATL'
      type: 'GS'
      endtime: '{{ states("sensor.atl_end_time") }}'
- alias: ATL GS Cancel
  trigger:
    platform: state
    entity_id: sensor.atl_end_time
    to: 'None'
  action:
    service: script.delay_notify
    data:
      airport: 'ATL'
      type: 'GSCX'
- alias: DTW Ground Delay
  trigger:
    platform: state
    entity_id: sensor.dtw_ground_delay
    to: 'True'
  action:
    service: script.delay_notify
    data:
      airport: 'DTW'
      type: 'GDP'
- alias: DTW Ground Stop
  trigger:
    platform: state
    entity_id: sensor.dtw_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.dtw_end_time', 'None') }}"
  action:
    service: script.delay_notify
    data_template:
      airport: 'DTW'
      type: 'GS'
      endtime: '{{ states("sensor.dtw_end_time") }}'
- alias: DTW GS Cancel
  trigger:
    platform: state
    entity_id: sensor.dtw_end_time
    to: 'None'
  action:
    service: script.delay_notify
    data:
      airport: 'DTW'
      type: 'GSCX'
- alias: LGA Ground Delay
  trigger:
    platform: state
    entity_id: sensor.lga_ground_delay
    to: 'True'
  action:
    service: script.delay_notify
    data:
      airport: 'LGA'
      type: 'GDP'
- alias: LGA Ground Stop
  trigger:
    platform: state
    entity_id: sensor.lga_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.lga_end_time', 'None') }}"
  action:
    service: script.delay_notify
    data_template:
      airport: 'LGA'
      type: 'GS'
      endtime: '{{ states("sensor.lga_end_time") }}'
- alias: LGA GS Cancel
  trigger:
    platform: state
    entity_id: sensor.lga_end_time
    to: 'None'
  action:
    service: script.delay_notify
    data:
      airport: 'LGA'
      type: 'GSCX'
- alias: JFK Ground Delay
  trigger:
    platform: state
    entity_id: sensor.jfk_ground_delay
    to: 'True'
  action:
    service: script.delay_notify
    data:
      airport: 'JFK'
      type: 'GDP'
- alias: JFK Ground Stop
  trigger:
    platform: state
    entity_id: sensor.jfk_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.jfk_end_time', 'None') }}"
  action:
    service: script.delay_notify
    data_template:
      airport: 'JFK'
      type: 'GS'
      endtime: '{{ states("sensor.jfk_end_time") }}'
- alias: JFK GS Cancel
  trigger:
    platform: state
    entity_id: sensor.jfk_end_time
    to: 'None'
  action:
    service: script.delay_notify
    data:
      airport: 'JFK'
      type: 'GSCX'
- alias: BOS Ground Delay
  trigger:
    platform: state
    entity_id: sensor.bos_ground_delay
    to: 'True'
  action:
    service: script.delay_notify
    data:
      airport: 'BOS'
      type: 'GDP'
- alias: BOS Ground Stop
  trigger:
    platform: state
    entity_id: sensor.bos_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.bos_end_time', 'None') }}"
  action:
    service: script.delay_notify
    data_template:
      airport: 'BOS'
      type: 'GS'
      endtime: '{{ states("sensor.bos_end_time") }}'
- alias: BOS GS Cancel
  trigger:
    platform: state
    entity_id: sensor.bos_end_time
    to: 'None'
  action:
    service: script.delay_notify
    data:
      airport: 'BOS'
      type: 'GSCX'
- alias: ORD Ground Delay
  trigger:
    platform: state
    entity_id: sensor.ord_ground_delay
    to: 'True'
  action:
    service: script.delay_notify
    data:
      airport: 'ORD'
      type: 'GDP'
- alias: ORD Ground Stop
  trigger:
    platform: state
    entity_id: sensor.ord_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.ord_end_time', 'None') }}"
  action:
    service: script.delay_notify
    data_template:
      airport: 'ORD'
      type: 'GS'
      endtime: '{{ states("sensor.ord_end_time") }}'
- alias: ORD GS Cancel
  trigger:
    platform: state
    entity_id: sensor.ord_end_time
    to: 'None'
  action:
    service: script.delay_notify
    data:
      airport: 'ORD'
      type: 'GSCX'
