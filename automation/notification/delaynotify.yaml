- alias: ATL Ground Delay
  trigger:
    platform: state
    entity_id: sensor.atl_ground_delay
    to: 'True'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'ATL'
        type: 'GDP'
    - condition: state
      entity_id: input_boolean.atl_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'ATL'
        type: 'GDP'
- alias: ATL Ground Stop
  trigger:
    platform: state
    entity_id: sensor.atl_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.atl_end_time', 'None') }}"
  action:
    - service: script.delay_notify
      data_template:
        target: 'discord'
        airport: 'ATL'
        type: 'GS'
        endtime: '{{ states("sensor.atl_end_time") }}'
    - condition: state
      entity_id: input_boolean.atl_notify
      state: 'on'
    - service: script.delay_notify
      data_template:
        target: 'ios'
        airport: 'ATL'
        type: 'GS'
        endtime: '{{ states("sensor.atl_end_time") }}'
- alias: ATL GS Cancel
  trigger:
    platform: state
    entity_id: sensor.atl_end_time
    to: 'None'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'ATL'
        type: 'GSCX'
    - condition: state
      entity_id: input_boolean.atl_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'ATL'
        type: 'GSCX'
- alias: DTW Ground Delay
  trigger:
    platform: state
    entity_id: sensor.dtw_ground_delay
    to: 'True'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'DTW'
        type: 'GDP'
    - condition: state
      entity_id: input_boolean.atl_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'DTW'
        type: 'GDP'
- alias: DTW Ground Stop
  trigger:
    platform: state
    entity_id: sensor.dtw_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.dtw_end_time', 'None') }}"
  action:
    - service: script.delay_notify
      data_template:
        target: 'discord'
        airport: 'DTW'
        type: 'GS'
        endtime: '{{ states("sensor.dtw_end_time") }}'
    - condition: state
      entity_id: input_boolean.dtw_notify
      state: 'on'
    - service: script.delay_notify
      data_template:
        target: 'ios'
        airport: 'DTW'
        type: 'GS'
        endtime: '{{ states("sensor.dtw_end_time") }}'
- alias: DTW GS Cancel
  trigger:
    platform: state
    entity_id: sensor.dtw_end_time
    to: 'None'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'DTW'
        type: 'GSCX'
    - condition: state
      entity_id: input_boolean.dtw_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'DTW'
        type: 'GSCX'
- alias: LGA Ground Delay
  trigger:
    platform: state
    entity_id: sensor.lga_ground_delay
    to: 'True'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'LGA'
        type: 'GDP'
    - condition: state
      entity_id: input_boolean.lga_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'LGA'
        type: 'GDP'
- alias: LGA Ground Stop
  trigger:
    platform: state
    entity_id: sensor.lga_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.lga_end_time', 'None') }}"
  action:
    - service: script.delay_notify
      data_template:
        target: 'discord'
        airport: 'LGA'
        type: 'GS'
        endtime: '{{ states("sensor.lga_end_time") }}'
    - condition: state
      entity_id: input_boolean.lga_notify
      state: 'on'
    - service: script.delay_notify
      data_template:
        target: 'ios'
        airport: 'LGA'
        type: 'GS'
        endtime: '{{ states("sensor.lga_end_time") }}'
- alias: LGA GS Cancel
  trigger:
    platform: state
    entity_id: sensor.lga_end_time
    to: 'None'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'LGA'
        type: 'GSCX'
    - condition: state
      entity_id: input_boolean.lga_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'LGA'
        type: 'GSCX'
- alias: JFK Ground Delay
  trigger:
    platform: state
    entity_id: sensor.jfk_ground_delay
    to: 'True'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'JFK'
        type: 'GDP'
    - condition: state
      entity_id: input_boolean.jfk_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'JFK'
        type: 'GDP'
- alias: JFK Ground Stop
  trigger:
    platform: state
    entity_id: sensor.jfk_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.jfk_end_time', 'None') }}"
  action:
    - service: script.delay_notify
      data_template:
        target: 'discord'
        airport: 'JFK'
        type: 'GS'
        endtime: '{{ states("sensor.jfk_end_time") }}'
    - condition: state
      entity_id: input_boolean.jfk_notify
      state: 'on'
    - service: script.delay_notify
      data_template:
        target: 'ios'
        airport: 'JFK'
        type: 'GS'
        endtime: '{{ states("sensor.jfk_end_time") }}'
- alias: JFK GS Cancel
  trigger:
    platform: state
    entity_id: sensor.jfk_end_time
    to: 'None'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'JFK'
        type: 'GSCX'
    - condition: state
      entity_id: input_boolean.jfk_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'JFK'
        type: 'GSCX'
- alias: BOS Ground Delay
  trigger:
    platform: state
    entity_id: sensor.bos_ground_delay
    to: 'True'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'BOS'
        type: 'GDP'
    - condition: state
      entity_id: input_boolean.bos_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'BOS'
        type: 'GDP'
- alias: BOS Ground Stop
  trigger:
    platform: state
    entity_id: sensor.bos_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.bos_end_time', 'None') }}"
  action:
    - service: script.delay_notify
      data_template:
        target: 'discord'
        airport: 'BOS'
        type: 'GS'
        endtime: '{{ states("sensor.bos_end_time") }}'
    - condition: state
      entity_id: input_boolean.bos_notify
      state: 'on'
    - service: script.delay_notify
      data_template:
        target: 'ios'
        airport: 'BOS'
        type: 'GS'
        endtime: '{{ states("sensor.bos_end_time") }}'
- alias: BOS GS Cancel
  trigger:
    platform: state
    entity_id: sensor.bos_end_time
    to: 'None'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'BOS'
        type: 'GSCX'
    - condition: state
      entity_id: input_boolean.bos_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'BOS'
        type: 'GSCX'
- alias: ORD Ground Delay
  trigger:
    platform: state
    entity_id: sensor.ord_ground_delay
    to: 'True'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'ORD'
        type: 'GDP'
    - condition: state
      entity_id: input_boolean.ord_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'ORD'
        type: 'GDP'
- alias: ORD Ground Stop
  trigger:
    platform: state
    entity_id: sensor.ord_end_time
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.ord_end_time', 'None') }}"
  action:
    - service: script.delay_notify
      data_template:
        target: 'discord'
        airport: 'ORD'
        type: 'GS'
        endtime: '{{ states("sensor.ord_end_time") }}'
    - condition: state
      entity_id: input_boolean.ord_notify
      state: 'on'
    - service: script.delay_notify
      data_template:
        target: 'ios'
        airport: 'ORD'
        type: 'GS'
        endtime: '{{ states("sensor.ord_end_time") }}'
- alias: ORD GS Cancel
  trigger:
    platform: state
    entity_id: sensor.ord_end_time
    to: 'None'
  action:
    - service: script.delay_notify
      data:
        target: 'discord'
        airport: 'ORD'
        type: 'GSCX'
    - condition: state
      entity_id: input_boolean.ord_notify
      state: 'on'
    - service: script.delay_notify
      data:
        target: 'ios'
        airport: 'ORD'
        type: 'GSCX'
